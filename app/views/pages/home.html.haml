-if current_user

  %div{:style => "width: 100%;"}
    #map{:style => "width: 100%; height: 600px;"}

  %h1=current_user.name.titlecase
  %h5="Total Trips: #{@trips.count}" 
  %h5="Total Flights: #{@flights.count}"
  -@trips_by_month.each do |monthname, trips|
    %h2=monthname
    -trips.each do |trip|
      %div{style: "border-top:1px solid lightgrey;border-bottom:1px solid lightgrey;"}
        %span{style: "color:red;font-weight:bold;font-size:18px;"}
          -if trip.flights.count < 3
            =Airport.find(trip.flights.first.arrival_airport).city
          -elsif trip.flights.count.even?
            - x = (trip.flights.count/2)-1
            - middle = trip.flights[x]
            =Airport.find(middle.arrival_airport).city
          -else
            - x = (trip.flights.count/2)-0.5
            - middle = trip.flights[x]
            =Airport.find(middle.arrival_airport).city
        in
        %b=trip.flights.first.depart_time.strftime("%B")
        -trip.flights.each do |flight|
          %div{style: "border-top:1px dotted lightgrey;border-bottom:1px solid lightgrey;"}
            =flight.depart_time
            %br
            =Airport.find(flight.depart_airport).name
            ="-"
            =Airport.find(flight.depart_airport).city
            ="(#{flight.depart_airport})"
            %br
            to
            %br
            =Airport.find(flight.arrival_airport).name
            ="-"
            =Airport.find(flight.arrival_airport).city
            ="(#{flight.arrival_airport})"
  
  :javascript
    $(window).bind("load", function() {
    
     var Tab = #{raw @hash.to_json}
     var Poly = #{@polylines}
     var mapStyle =
      [
        {
            "featureType": "administrative",
            "elementType": "all",
            "stylers": [
                {
                    "visibility": "off"
                }
            ]
        },
        {
            "featureType": "administrative.country",
            "elementType": "geometry.stroke",
            "stylers": [
                {
                    "visibility": "on"
                },
                {
                    "color": "#F7F5F2"
                },
                {
                    "weight": 0.8
                }
            ]
        },
        {
            "featureType": "water",
            "elementType": "all",
            "stylers": [
                {
                    "color": "#F7F5F2"
                }
            ]
        },
        {
            "featureType": "landscape",
            "elementType": "all",
            "stylers": [
                {
                    "color": "#DDD4CB"
                }
            ]
        },
        {
            "featureType": "poi",
            "elementType": "all",
            "stylers": [
                {
                    "color": "#DDD4CB"
                }
            ]
        },
        {
            "featureType": "road",
            "elementType": "all",
            "stylers": [
                {
                    "visibility": "off"
                }
            ]
        },
        {
            "featureType": "transit",
            "elementType": "all",
            "stylers": [
                {
                    "visibility": "off"
                }
            ]
        },
        {
            "featureType": "all",
            "elementType": "labels",
            "stylers": [
                {
                    "visibility": "off"
                }
            ]
        }
      ] 





      handler = Gmaps.build('Google');
      //gmaps({"polylines"=> { "data" => Poly }})
      handler.buildMap({
          provider: {
            //disableDefaultUI: true
            // pass in other Google Maps API options here
            styles: mapStyle,
            zoom: -10

          },
          internal: {
            id: 'map'
          }
      },
        function(){
          markers = handler.addMarkers(Tab);
          handler.bounds.extendWith(markers);
          handler.fitMapToBounds();
          handler.addPolylines(Poly);
        }
      );        
    

    });
-else
  %h1 Map your entire travel history with just one click.
  %p Map, track,  sort your past  future travel without inputting anything.
  = form_for(:user, :as => :user, :url => registration_path(:user)) do |f|
    = f.text_field :name, placeholder: "Name"
    = f.email_field :email, placeholder: "Email" 
    = f.password_field :password, placeholder: "Password"
    = button_tag :type => :submit do
      Sign up

